name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  pages: write
  discussions: write
  issues: write
  checks: write
  actions: write
  statuses: write

jobs:
  # release_npm_package:
  #   if: ${{ contains(github.event.head_commit.message, '[patch]') || contains(github.event.head_commit.message, '[minor]') || contains(github.event.head_commit.message, '[major]') }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3.3.0
  #       with:
  #         fetch-depth: 0
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: 16.15.0

  #     - run: yarn install
  #     - run: yarn run build
  #     - run: echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > .npmrc
  #     - run: git config user.email "xiaoweihsueh@gmail.com"
  #     - run: git config user.name "Hsuehic"
  #     - name: Version
  #       run: npm version patch
  #       if: ${{ contains(github.event.head_commit.message, '[patch]') }}
  #       env:
  #         NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  #         GH_TOKEN: ${{ secrets.PAT }}
  #     - run: npm version minor
  #       if: ${{ contains(github.event.head_commit.message, '[minor]') }}
  #       env:
  #         GH_TOKEN: ${{ secrets.PAT }}
  #     - run: npm version major
  #       if: ${{ contains(github.event.head_commit.message, '[minor]') }}
  #       env:
  #         GH_TOKEN: ${{ secrets.PAT }}
  #     - run: npm publish
  #       env:
  #         NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  #     - run: git push
  #       env:
  #         GH_TOKEN: ${{ secrets.PAT }}

  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Dependencies
        run: yarn install

      - name: Build
        run: yarn build

      - name: Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          publish: yarn release
          commit: 'chore: version package and publish'
          title: 'chore: version package and publish'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Send a Slack notification if a publish happens
        if: steps.changesets.outputs.published == 'true'
        # You can do something when a publish happens.
        run: echo "A new version of ${GITHUB_REPOSITORY} was published" # my-slack-bot send-notification --message "A new version of ${GITHUB_REPOSITORY} was published!"
